apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
spec:
  mountedVolumes:
    volumeMounts:
      - mountPath: /etc/kafka/cfk/secrets
        name: secrets
    volumes:
      - name: secrets
        configMap:
          name: secrets
  tls:
    secretRef: tls-kafka
  telemetry:
    global: false

  listeners:
    external:
      authentication:
        type: ldap

      tls:
        enabled: true
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: plain.kafka.nermdev.io
          brokerPrefix: pb
          bootstrapPrefix: bootstrap


  authorization:
    type: rbac
    superUsers:
      - User:kafka




  services:
    mds:
      externalAccess:
        type: nodePort
        nodePort:
          externalTrafficPolicy: Cluster
          host: kafka.nermdev.io
          nodePortOffset: 30001
      authentication:
        type: bearer

      tls:
        enabled: true
      provider:
        ldap:
          address: ldap://ldap.cfk-operator.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: ldaps-user
          configurations:
            groupNameAttribute: cn
            groupObjectClass: posixGroup
            groupMemberAttribute: memberUid
            groupMemberAttributePattern: cn=(.*),ou=users,dc=nermdev,dc=io
            groupSearchBase: ou=groups,dc=nermdev,dc=io
            userNameAttribute: cn
            userObjectClass: inetOrgPerson
            userSearchBase: ou=users,dc=nermdev,dc=io
        type: ldap
      tokenKeyPair:
        secretRef: mds-token

  configOverrides:
    server:
      - kafka.rest.client.client.id=confluent.nermdev.kafkarestclient
      - kafka.rest.admin.client.id=confluent.nermdev.kafkarestadmin
      - kafka.rest.admin.ssl.keystore.location=/mnt/sslcerts/keystore.p12
      - kafka.rest.admin.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - kafka.rest.admin.ssl.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - kafka.rest.admin.ssl.truststore.location=/mnt/sslcerts/truststore.p12
      - kafka.rest.admin.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - auto.create.topics.enable=true

  dataVolumeCapacity: 150Gi

  podTemplate:
    envVars:
      - name: CONFLUENT_SECURITY_MASTER_KEY
        valueFrom:
          secretKeyRef:
            name: confluent-secrets
            key: MASTER_KEY
    resources:
      requests:
        cpu: 2.0
        memory: 8Gi
    tolerations:
      - key: app
        operator: Equal
        value: kafka
        effect: NoSchedule
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: app
                  operator: In
                  values:
                    - kafka
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - kafka
                    - zookeeper


  dependencies:
    schemaRegistry:
      url: https://sr.confluent.svc.cluster.local:8081
      tls:
        enabled: true
      authentication:
        type: basic
        basic:
          secretRef: mds-kafka


    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-kafka
      tls:
        enabled: true
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9073


  metricReporter:
    enabled: true
    authentication:
      type: mtls
    tls:
      enabled: true
