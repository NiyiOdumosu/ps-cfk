apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
spec:
  replicas: 1
  tls:
    secretRef: tls-kafka
  telemetry:
    global: false

  listeners:
    external:
      authentication:
        type: ldap
      tls:
        enabled: true
      externalAccess:
        type: staticForHostBasedRouting
        staticForHostBasedRouting:
          domain: dev.gke.confluentps.io
          brokerPrefix: b
          port: 443


  authorization:
    type: rbac
    superUsers:
      - User:kafka




  services:
    mds:
      externalAccess:
        type: nodePort
        nodePort:
          externalTrafficPolicy: Cluster
          host: mds.dev.gke.confluentps.io
          nodePortOffset: 30002
      authentication:
        type: bearer

      tls:
        enabled: true
      provider:
        ldap:
          address: ldap://ldap.cfk-operator.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: ldaps-user
          configurations:
            groupNameAttribute: cn
            groupObjectClass: posixGroup
            groupMemberAttribute: memberUid
            groupMemberAttributePattern: cn=(.*),ou=users,dc=confluentps,dc=io
            groupSearchBase: ou=groups,dc=confluentps,dc=io
            userNameAttribute: cn
            userObjectClass: inetOrgPerson
            userSearchBase: ou=users,dc=confluentps,dc=io
        type: ldap
      tokenKeyPair:
        secretRef: mds-token

  configOverrides:
    server:
      - kafka.rest.client.client.id=dev.confluentps.kafkarestclient
      - kafka.rest.admin.client.id=dev.confluentps.kafkarestadmin
      - kafka.rest.admin.ssl.keystore.location=/mnt/sslcerts/keystore.p12
      - kafka.rest.admin.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - kafka.rest.admin.ssl.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - kafka.rest.admin.ssl.truststore.location=/mnt/sslcerts/truststore.p12
      - kafka.rest.admin.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - auto.create.topics.enable=true
      - confluent.cluster.link.enable=true
      - confluent.balancer.enable=false
      - confluent.license.topic.replication.factor=1
      - confluent.metrics.reporter.topic.replicas=1
      - confluent.metrics.reporter.publish.ms=60000
      - confluent.metrics.reporter.topic.retention.ms=7200000
      - confluent.tier.metadata.replication.factor=1
      - confluent.metadata.topic.replication.factor=1
      - confluent.balancer.topic.replication.factor=1
      - confluent.security.event.logger.exporter.kafka.topic.replicas=1
      - event.logger.exporter.kafka.topic.replicas=1
      - offsets.topic.replication.factor=1
      - log.retention.hours=3
      - min.insync.replicas=1
      - transaction.state.log.replication.factor=1
      - confluent.cluster.link.metadata.topic.replication.factor=1
      - default.replication.factor=1


  dataVolumeCapacity: 25Gi

  podTemplate:
    resources:
      requests:
        cpu: 1.0
        memory: 2Gi


  dependencies:
    zookeeper:
      endpoint: zookeeper.dev.svc.cluster.local:2182
      authentication:
        type: mtls
      tls:
        enabled: true
    schemaRegistry:
      url: https://sr.dev.svc.cluster.local:8081
      tls:
        enabled: true
      authentication:
        type: basic
        basic:
          secretRef: mds-kafka
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-kafka
      tls:
        enabled: true
      bootstrapEndpoint: kafka.dev.svc.cluster.local:9073


  metricReporter:
    enabled: true
    authentication:
      type: mtls
    tls:
      enabled: true
